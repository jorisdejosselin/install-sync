[tool.poetry]
name = "install-sync"
version = "0.8.0"
description = "Cross-platform software installation manager with git tracking"
authors = ["Joris <joris@example.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/jorisdejosselin/install-sync"
repository = "https://github.com/jorisdejosselin/install-sync"
keywords = ["package-manager", "automation", "cross-platform", "git"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Software Distribution",
]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
typer = {version = ">=0.12.0", extras = ["all"]}
requests = "^2.28.0"
rich = ">=13.0,<15.0"
pydantic = "^2.0.0"
GitPython = "^3.1.0"
packaging = "^23.0"

[tool.poetry.extras]
build = ["pyinstaller"]

[tool.poetry.group.build.dependencies]
pyinstaller = {version = "^5.13.0", python = "<3.13"}
nuitka = {version = "^2.0.0", python = ">=3.13"}

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.0.0"
pre-commit = "^3.0.0"
types-requests = ">=2.25.0,<2.32.0"
python-semantic-release = "^10.2.0"

[tool.poetry.scripts]
install-sync = "install_sync.main:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
major_on_zero = true
commit_author = "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"

# Custom commit parsing to recognize your commit types
[tool.semantic_release.commit_parser_options]
allowed_tags = ["feature", "feat", "bug", "fix", "perf", "docs", "style", "refactor", "test", "chore"]
minor_tags = ["feature", "feat"]
patch_tags = ["bug", "fix", "perf"]
